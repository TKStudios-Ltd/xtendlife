<section class="ingredients-index" data-section-id="{{ section.id }}">
  <div class="page-width">

    {% comment %} Resolve blogs (fallback to typical handles) {% endcomment %}
    {% assign supp_handle = section.settings.supp_blog | default: 'supplement-ingredients' %}
    {% assign skin_handle = section.settings.skin_blog | default: 'skincare-ingredients' %}
    {% assign supp_blog   = blogs[supp_handle] %}
    {% assign skin_blog   = blogs[skin_handle] %}

    <!-- Tabs -->
    <div class="flex items-center gap-6 mb-6">
      <button class="tab-btn text-lg font-medium active" data-tab="supp-{{ section.id }}">Supplements</button>
      <button class="tab-btn text-lg font-medium opacity-60 hover:opacity-100" data-tab="skin-{{ section.id }}">Skincare</button>
    </div>
    <hr class="mb-8" />

    {% assign letters = 'A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|0-9' | split: '|' %}

    <!-- SUPPLEMENTS -->
    <div class="tab-panel" id="supp-{{ section.id }}">
      {% if section.settings.supp_intro != blank %}
        <div class="rte mb-6">{{ section.settings.supp_intro }}</div>
      {% endif %}

      <ul class="letters mb-6" role="tablist" aria-label="Filter by letter">
        {% for l in letters %}
          <li style="list-style:none;display:inline-block;margin-right:12px">
            <button class="letter{% if l == 'A' %} active{% endif %}" data-letter="{{ l }}">{{ l }}</button>
          </li>
        {% endfor %}
      </ul>

      {% if supp_blog and supp_blog.articles_count > 0 %}
        {% assign supp_sorted = supp_blog.articles | sort: 'title' %}
        <div class="ingredients-list" data-list-for="supplements">
          {% for article in supp_sorted limit: 1000 %}
            {% if article.handle != blank %}
              {% assign first = article.title | slice: 0, 1 | upcase %}
              {% if first == blank or first contains '0' or first contains '1' or first contains '2' or first contains '3' or first contains '4' or first contains '5' or first contains '6' or first contains '7' or first contains '8' or first contains '9' %}
                {% assign first = '0-9' %}
              {% endif %}
              <article class="ingredient-row" data-letter="{{ first }}">
                <a class="ingredient-link" href="{{ article.url }}">{{ article.title }}</a>
                {% if section.settings.show_excerpt and article.excerpt != blank %}
                  <div class="ingredient-excerpt">{{ article.excerpt | strip_html }}</div>
                {% endif %}
              </article>
            {% endif %}
          {% endfor %}
        </div>
      {% else %}
        <div class="ingredients-list" data-list-for="supplements"></div>
        <div style="font-size:12px;opacity:.6">No published articles in <code>{{ supp_handle }}</code>.</div>
      {% endif %}
    </div>

    <!-- SKINCARE -->
    <div class="tab-panel hidden" id="skin-{{ section.id }}">
      {% if section.settings.skin_intro != blank %}
        <div class="rte mb-6">{{ section.settings.skin_intro }}</div>
      {% endif %}

      <ul class="letters mb-6" role="tablist" aria-label="Filter by letter">
        {% for l in letters %}
          <li style="list-style:none;display:inline-block;margin-right:12px">
            <button class="letter{% if l == 'A' %} active{% endif %}" data-letter="{{ l }}">{{ l }}</button>
          </li>
        {% endfor %}
      </ul>

      {% if skin_blog and skin_blog.articles_count > 0 %}
        {% assign skin_sorted = skin_blog.articles | sort: 'title' %}
        <div class="ingredients-list" data-list-for="skincare">
          {% for article in skin_sorted limit: 1000 %}
            {% if article.handle != blank %}
              {% assign first = article.title | slice: 0, 1 | upcase %}
              {% if first == blank or first contains '0' or first contains '1' or first contains '2' or first contains '3' or first contains '4' or first contains '5' or first contains '6' or first contains '7' or first contains '8' or first contains '9' %}
                {% assign first = '0-9' %}
              {% endif %}
              <article class="ingredient-row" data-letter="{{ first }}">
                <a class="ingredient-link" href="{{ article.url }}">{{ article.title }}</a>
                {% if section.settings.show_excerpt and article.excerpt != blank %}
                  <div class="ingredient-excerpt">{{ article.excerpt | strip_html }}</div>
                {% endif %}
              </article>
            {% endif %}
          {% endfor %}
        </div>
      {% else %}
        <div class="ingredients-list" data-list-for="skincare"></div>
        <div style="font-size:12px;opacity:.6">No published articles in <code>{{ skin_handle }}</code>.</div>
      {% endif %}
    </div>
  </div>

  <style>
    [data-section-id="{{ section.id }}"] .tab-btn { border:0; background:none; cursor:pointer; }
    [data-section-id="{{ section.id }}"] .tab-btn.active { font-weight:600; }
    [data-section-id="{{ section.id }}"] .hidden { display:none!important; }
    [data-section-id="{{ section.id }}"] .letter { border:0; background:none; cursor:pointer; opacity:.6; }
    [data-section-id="{{ section.id }}"] .letter.active { text-decoration:underline; opacity:1; }
    [data-section-id="{{ section.id }}"] .ingredients-list { display:grid; gap:16px; }
    [data-section-id="{{ section.id }}"] .ingredient-row { padding:10px 0; border-bottom:1px solid rgba(0,0,0,.08); }
    [data-section-id="{{ section.id }}"] .ingredient-link { font-weight:600; }
    [data-section-id="{{ section.id }}"] .ingredient-excerpt { margin-top:4px; opacity:.8; }
  </style>

  <script>
    (function(){
      const root = document.querySelector('[data-section-id="{{ section.id }}"]');
      if (!root) return;

      const tabs = Array.from(root.querySelectorAll('.tab-btn'));
      const panels = {};
      tabs.forEach(t => panels[t.dataset.tab] = root.querySelector('#' + t.dataset.tab));

      function showTab(id){
        tabs.forEach(b => b.classList.toggle('active', b.dataset.tab === id));
        Object.keys(panels).forEach(k => panels[k]?.classList.toggle('hidden', k !== id));
        const panel = panels[id];
        const btnA = panel?.querySelector('.letters .letter[data-letter="A"]');
        if (btnA) applyLetter(panel, 'A', true);
      }

      function applyLetter(panel, letter, allowFallback){
        panel.querySelectorAll('.letters .letter').forEach(b=>{
          b.classList.toggle('active', b.dataset.letter === letter);
        });
        const rows = Array.from(panel.querySelectorAll('.ingredients-list .ingredient-row'));
        let visible = 0;
        rows.forEach(r => {
          const show = (r.dataset.letter || '').toUpperCase() === letter.toUpperCase();
          r.style.display = show ? '' : 'none';
          if (show) visible++;
        });
        if (allowFallback && visible === 0) {
          const order = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0-9'];
          const counts = new Map();
          rows.forEach(r => { const L = (r.dataset.letter || '').toUpperCase(); counts.set(L, (counts.get(L)||0)+1); });
          const fb = order.find(L => (counts.get(L)||0) > 0);
          if (fb) {
            panel.querySelectorAll('.letters .letter').forEach(b=>b.classList.toggle('active', b.dataset.letter === fb));
            rows.forEach(r => r.style.display = ((r.dataset.letter || '').toUpperCase() === fb) ? '' : 'none');
          }
        }
      }

      root.addEventListener('click', e => {
        const t = e.target.closest('.tab-btn');
        if (t) { e.preventDefault(); showTab(t.dataset.tab); return; }
        const b = e.target.closest('.letters .letter');
        if (b) {
          const panel = e.target.closest('.tab-panel');
          if (panel) { e.preventDefault(); applyLetter(panel, b.dataset.letter, false); }
        }
      });

      showTab(tabs[0]?.dataset.tab);
    })();
  </script>
</section>

{% schema %}
{
  "name": "Ingredients index",
  "settings": [
    { "type": "blog", "id": "supp_blog", "label": "Supplements blog" },
    { "type": "richtext", "id": "supp_intro", "label": "Supplements intro" },
    { "type": "blog", "id": "skin_blog", "label": "Skincare blog" },
    { "type": "richtext", "id": "skin_intro", "label": "Skincare intro" },
    { "type": "checkbox", "id": "show_excerpt", "label": "Show article excerpts", "default": false }
  ],
  "presets": [{ "name": "Ingredients index" }]
}
{% endschema %}
